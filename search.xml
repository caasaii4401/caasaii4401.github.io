<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阶乘之和</title>
      <link href="/2023/05/01/%E9%98%B6%E4%B9%98%E4%B9%8B%E5%92%8C/"/>
      <url>/2023/05/01/%E9%98%B6%E4%B9%98%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入n， 计算S＝1！＋ 2！＋ 3！＋ …＋ n！的末6位（ 不含前导0 ）n≤10^6， n!表示前n个正整数之积。</p><p>样例输入：</p><p>10</p><p>样例输出：</p><p>37913<br>根据题目描述，我们可以得到以下代码。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;ctime&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> fac <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> MOD <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span>cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>fac <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>fac<span class="token operator">=</span><span class="token punctuation">(</span>fac <span class="token operator">*</span> j<span class="token punctuation">)</span><span class="token operator">%</span>MOD<span class="token punctuation">;</span><span class="token punctuation">}</span>sum <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> fac<span class="token punctuation">)</span><span class="token operator">%</span>MOD<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//测试时间</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"time used=%.2f\n"</span><span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>CLOCKS_PER_SEC<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>要计算只包含加法、减法、乘法的整数表达式除以正整数n的余数，可以在每一步计算时对n取余，结果不变。<br>可以使用time函数获得程序运行的时间，常数CLOCKS_PER_SEC和操作系统相关，请不要使用clock()的返回值。而应该总是除以CLOCKS_PER_SEC。</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言算法基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近似计算</title>
      <link href="/2023/05/01/%E8%BF%91%E4%BC%BC%E8%AE%A1%E7%AE%97/"/>
      <url>/2023/05/01/%E8%BF%91%E4%BC%BC%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>用π/4=1-1/3+1/5-1/7+1/9-…公式求π的近似值求π的近似值，直到最后一项的绝对值小于10^6为止。</p><h3 id="使用do-while"><a href="#使用do-while" class="headerlink" title="使用do-while"></a>使用do-while</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">double</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token punctuation">{</span>result <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">/</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据题目观察发现奇数列和偶数列的关系</span><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>sum <span class="token operator">=</span> sum <span class="token operator">+</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>sum <span class="token operator">=</span> sum <span class="token operator">-</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span>i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>result<span class="token operator">&gt;</span><span class="token number">1e-6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.6f\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实这道题较为简单，主要是熟悉do-while和for循环的使用。</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言算法基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3n+1问题</title>
      <link href="/2023/05/01/3n-1%E9%97%AE%E9%A2%98/"/>
      <url>/2023/05/01/3n-1%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>对于任意大于1的自然数n，若n为奇数，则将n变为3n+1，否则变为n的一半。经过若干次这样的变换，一定会使n变为1。例如3-&gt;10-&gt;5-&gt;16-&gt;8-&gt;2-&gt;1。<br>输入n，输出变换的次数。n≤10^9。</p><p>样例输入：3</p><p>样例输出：7　</p><p>C语言代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">long</span> <span class="token keyword">long</span> n<span class="token punctuation">;</span><span class="token comment">//防止数据溢出</span><span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//计数器</span><span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//如果是偶数</span><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>n <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token comment">//否则是奇数</span><span class="token keyword">else</span> <span class="token punctuation">{</span>n <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>count<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言算法基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们为什么要学习算法</title>
      <link href="/2023/05/01/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/"/>
      <url>/2023/05/01/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="算法在求解问题中存在着核心地位"><a href="#算法在求解问题中存在着核心地位" class="headerlink" title="算法在求解问题中存在着核心地位"></a>算法在求解问题中存在着核心地位</h1><p>算法是用来描述问题的解决方案，如果没有算法，问题就无法解决。</p><h1 id="算法训练能够提高计算思维能力"><a href="#算法训练能够提高计算思维能力" class="headerlink" title="算法训练能够提高计算思维能力"></a>算法训练能够提高计算思维能力</h1><p>一名优秀的程序员必定有着较高的计算思维能力，而这个能力就是与算法息息相关的，这也是科班学生和非科班学生的区别之一。算法训练就像一种思维体操，能够锻炼我们的思维，使思维变得更清晰、更有逻辑。这正式我们所需要的！！！</p><h1 id="算法研究是推动计算机技术发展的关键"><a href="#算法研究是推动计算机技术发展的关键" class="headerlink" title="算法研究是推动计算机技术发展的关键"></a>算法研究是推动计算机技术发展的关键</h1><p>算法研究的核心问题是时间的问题。作为计算机专业的学生，学会读懂算法、设计算法是一项最基本的要求，而发明算法则是计算机学者的最高境界。如果你发明了一个算法，可以毕业了。</p><h1 id="学好算法，你就是大佬"><a href="#学好算法，你就是大佬" class="headerlink" title="学好算法，你就是大佬"></a>学好算法，你就是大佬</h1><p>计算机中的大佬，必定有着较强的算法能力，愿我们能在计算机的海洋中找到自己的岛屿，找到自己的方向，加油，努力像大佬看齐！！！冲鸭！！！</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法的重要性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求最大公约数</title>
      <link href="/2023/05/01/%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/"/>
      <url>/2023/05/01/%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是最大公约数和最小公倍数？"><a href="#什么是最大公约数和最小公倍数？" class="headerlink" title="什么是最大公约数和最小公倍数？"></a>什么是最大公约数和最小公倍数？</h3><p>如果你不知道什么是最大公约数和最小公倍数，那么请先去了解其概念。</p><p>这是求最大公约数的方法，其实不难发现，欧几里得算法效率更高。在得到最大公约数后，求最小公倍数就太简单了。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">theFunc1</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//短除法计算最大公约数函数</span><span class="token keyword">int</span> <span class="token function">theFunc2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//欧几里得法求最大公约数</span><span class="token keyword">int</span> <span class="token function">theFunc1</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> fac <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> a <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> b<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//判断是否能同时被整除，使用短除法判断最大公约数</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>a <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            fac <span class="token operator">=</span> fac <span class="token operator">*</span> i<span class="token punctuation">;</span>            a <span class="token operator">=</span> a <span class="token operator">/</span> i<span class="token punctuation">;</span>            b <span class="token operator">=</span> b <span class="token operator">/</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> fac<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">theFunc2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> fac <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    fac <span class="token operator">=</span> a <span class="token operator">%</span> b<span class="token punctuation">;</span><span class="token comment">//满足大数%小数</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>fac <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        a <span class="token operator">=</span> b<span class="token punctuation">;</span>        b <span class="token operator">=</span> fac<span class="token punctuation">;</span>        fac <span class="token operator">=</span> a <span class="token operator">%</span> b<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span>b<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"短除法计算最大公约数结果"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token function">theFunc1</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"欧几里得法计算最大公约数结果"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token function">theFunc2</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言算法基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法分析基础</title>
      <link href="/2023/05/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/05/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="算法的时间复杂性分析"><a href="#算法的时间复杂性分析" class="headerlink" title="算法的时间复杂性分析"></a>算法的时间复杂性分析</h3><p>为什么要进行时间复杂度分析呢？<br>算法的核心就是效率。因为算法就是解决问题的方法，而这个方法的快慢是非常重要的。试想一下计算一道题，一个算法用了5分钟，而另一个算法用了1年。哪个算法好，你觉得呢？</p><h3 id="什么是输入规模和基本语句"><a href="#什么是输入规模和基本语句" class="headerlink" title="什么是输入规模和基本语句"></a>什么是输入规模和基本语句</h3><p>输入量：输入量的多少<br>基本语句：是指执行次数与整个算法的执行次数成正比的语句。<br>是算法中最重要的操作。</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c">···<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>k<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请找出输入规模和基本语句。</p><h3 id="算法的渐进分析"><a href="#算法的渐进分析" class="headerlink" title="算法的渐进分析"></a>算法的渐进分析</h3>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言算法基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>输出形如aabb的4位完全平方数</title>
      <link href="/2023/05/01/%E8%BE%93%E5%87%BA%E5%BD%A2%E5%A6%82aabb%E7%9A%844%E4%BD%8D%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/"/>
      <url>/2023/05/01/%E8%BE%93%E5%87%BA%E5%BD%A2%E5%A6%82aabb%E7%9A%844%E4%BD%8D%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>你知道什么是开平方数吗？</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一种方法</span><span class="token keyword">void</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第二种方法</span><span class="token keyword">void</span> <span class="token function">func3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第三种方法</span><span class="token comment">/*aabb数等于aa00+bb;根据思路构建即可*/</span><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span> <span class="token comment">//aabb数等于aa00+bb;</span><span class="token keyword">int</span> m<span class="token punctuation">;</span><span class="token comment">//用来存储aabb;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token comment">//判断n*n==m</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>m <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">1100</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">11</span><span class="token punctuation">;</span>n <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token function">sqrt</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">*</span> n <span class="token operator">==</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/*通过分析不难发现，一个四位数由个位十位百位千位构成aabb的数据，只需要a==b,c==d即可。然后通过判断一个数等于另个一数的平方即可。*/</span><span class="token keyword">void</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> g<span class="token punctuation">,</span> s<span class="token punctuation">,</span> b<span class="token punctuation">,</span> q<span class="token punctuation">;</span><span class="token comment">//变量分别位个位，十位，百位，千位</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>j <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>s <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>b <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>q <span class="token operator">=</span> i <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> q <span class="token operator">&amp;&amp;</span> g <span class="token operator">==</span> s <span class="token operator">&amp;&amp;</span> i <span class="token operator">==</span> j <span class="token operator">*</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/*枚举平方根x,避免开平方操作*/</span> <span class="token keyword">void</span> <span class="token function">func3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> hi<span class="token punctuation">,</span> lo<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>n <span class="token operator">=</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span><span class="token comment">//printf("%d\n", n);</span><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">9999</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span>hi <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>lo <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>hi <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">==</span> hi <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> lo <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">==</span> lo <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">func3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言算法基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
